<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <env name="GAZEBO_MODEL_PATH" value="$(find autorally_description)"/>
  <env name="GAZEBO_RESOURCE_PATH" value="$(find autorally_description)"/>
  <arg name="namespace" default="autorally_platform"/>
  <arg name="world_name" default="model://urdf/empty_sky_AR.world"/>
  <arg name="cmd_timeout" default="0.5"/>

  <!-- parameter for other programs to use to know if we are in simulation ro real world-->
  <param name="autorally_simulation" value="true"/>

  <!-- Vehicle pose -->
  <arg name="x" default="0"/>
  <arg name="y" default="-8.5"/>
  <arg name="z" default="0.3"/>
  <arg name="roll" default="0.0"/>
  <arg name="pitch" default="0.0"/>
  <arg name="yaw" default="0.785398"/>

  <include file="$(find autorally_description)/launch/autoRallyPlatform.launch">
    <arg name="namespace" value="$(arg namespace)"/>
  </include>

  <!-- Remap to same topics as the actual robot -->
  <remap from="/$(arg namespace)/imu" to="/imu/imu" />
  <remap from="/$(arg namespace)/gpsRoverStatus" to="/gpsRoverStatus" />
  <remap from="/$(arg namespace)/camera/left" to="/left_camera" />
  <remap from="/$(arg namespace)/camera/right" to="/right_camera" />

  <!-- Spawn the vehicle. -->
    <group ns="$(arg namespace)">
  <node name="spawn_platform" pkg="gazebo_ros" type="spawn_model"
        args="-urdf -param robot_description -model autoRallyPlatform
              -gazebo_namespace /$(arg namespace)/gazebo
              -x $(arg x) -y $(arg y) -z $(arg z)
              -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>

              <!-- Load the joint controllers. One of these publishes the joint states
                   to joint_states. -->
              <node name="controller_spawner" pkg="controller_manager" type="spawner"
                    args="$(find autorally_gazebo)/config/autoRallyPlatformJointCtrlrParams.yaml"/>

              <!-- Control the steering, axle, and shock absorber joints. -->
              <node name="autorally_controller" pkg="autorally_gazebo"
                    type="autorally_controller.py" output="screen">
              <param name="cmd_timeout" value="$(arg cmd_timeout)"/>
               <rosparam file="$(find autorally_gazebo)/config/autoRallyPlatformCtrlrParams.yaml" command="load"/>
             <rosparam param="chassisCommandProirities" command="load" file="$(env AR_CONFIG_PATH)/chassisCommandPriorities.yaml" />





                 </node>
               </group>
                 <include file="$(find autorally_core)/launch/autorally_core_manager.launch" />

</launch>
